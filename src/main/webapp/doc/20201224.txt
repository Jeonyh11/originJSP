
배포 

 1. 6.jspSpring/depoly/jsp 폴더에 github에서 소스코드를 clone
  #1.2 소스코드를 최신화 되도록 github에서 pull
    cd jsp
    git pull
    
  #2.maven을 이용하여 war 파일로 생성
	mvn package

  #3.tomcat이 기동중이라고 가정하고 shutdown.sh을 실행(서버를 끄는 작업)
	/d/B_Util/5.ApacheTomcat/apache-tomcat-8.5.37-windows-x64/apache-tomcat-8.5.37/bin/shutdown.sh

  #4. 2번 과정에서 생성된 파일(jsp-0.0.1-SNAPSHOT.war)의 이름을 jsp.war로 수정
	cd target
	mv ./jsp-0.0.1-SNAPSHOT.war .jsp.war

  #5.0 webapps 폴더에 존재하는 jsp 폴더와 jsp.war 파일을 삭제 (생성하기 전에 존재하는 파일이 있을 경우)
	rm /d/B_Util/5.ApacheTomcat/apache-tomcat-8.5.37-windows-x64/apache-tomcat-8.5.37/webapps/jsp.war
	rm -rf /d/B_Util/5.ApacheTomcat/apache-tomcat-8.5.37-windows-x64/apache-tomcat-8.5.37/webapps/jsp
	
	
  #5. 4번 과정에서 만들어진 jsp.war 파일을 tomcat의 webapps 폴더에 복사
	cp ./jsp.war /d/B_Util/5.ApacheTomcat/apache-tomcat-8.5.37-windows-x64/apache-tomcat-8.5.37/webapps
	
	
  #6. tomcat을 기동 - startup.sh(서버 시작)
	/d/B_Util/5.ApacheTomcat/apache-tomcat-8.5.37-windows-x64/apache-tomcat-8.5.37/bin/startup.sh

만들어진 war 파일을 tomcat의 webapps 폴더에 복사
단 컨택스트 패스 (웹 어플리케이션 이름)을 고려해서 war파일의 이름을 적정하게 수정

톰캣 실행


