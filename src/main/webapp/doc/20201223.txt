
서블릿 생성
1. HttpServlet 클래스를 상속한 클래스를 생성


2. url-mapping
	- web.xml 설정하는 방법
	- 서블릿 클래스를 만들때 @WebServlet 어노테이션을 통해 url 등록
	
* 패키지 작명 : 도메인 역순(메이븐 프로젝트의 Group id)
			 kr.or.ddit.모듈.서브모듈
			 
Servlet - life cycle
	init()  -> service() -> doXXX() -> destory()

	Maven
	 프로젝트의 복잡성
	 라이브러리 없이 프로젝트를 진행하는 경우는 없음
	 라이브러리를 다운 받는다
	 프로젝트에 라이브러리를 등록한다
	 
	 라이브러리가 변경될 때 /새로운 프로젝트를 할때 마다 위 과정을 반복 
	 그리하여 Maven 이 나왔다능 (정형화와 관리의 필요성을 느껴서)
	 
	 Maven 빌드 도구
	 1. 프로젝트에서 필요로 하는 라이브러리 관리의 어려움
	 2. 프로젝트를 배포하는데 있어서 공통된 작업이 보이기 시작한다
	   2.1 java 파일을 컴파일
	   2.2 class에서 사용하는 설정 파일들을 복사
	   2.3 운영 코드를 테스트 할 수 있는 테스트 자바 코드 컴파일
	   2.4 테스트 코드에서 사용하는 설정파일들 복사
	   2.5 테스트 코드 통과 여부
	   2.6 테스트 코드를 제외한 운영코드를 war 파일로 패키징
	   2.7 설치된 tomcat의 webapps 폴더에 war 파일 복사
	   
	 Maven 사용하는 이유
	 mvn clean : 메이븐 빌드과정에서 생성된 결과물(target) 삭제
	 mvn package : java -> class 컴파일, war 파일로 생성
	 				artifactid-version.war
	 				
	 mvn 명령어를 실행 할때는 pom.xml이 존재하는 폴더로 이동해서 실행
	 
	 
	 
	 
	 